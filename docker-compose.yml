
services:
  # ðŸ”¹ API Gateway
  service-api-gateway:
    build:
      context: ../gateway-api
      args:
          API_PORT: "${API_PORT}"
    container_name: cont-service-api-gateway
    ports:
      - "${API_PORT}:${API_PORT}"
    env_file:
      - .env
    depends_on:
      - service-auth
    restart: always
    networks:
      - my-network
  
  # ðŸ”¹ Servicios
  service-auth:
    build:
      context: ../auth-service
      args:
          AUTH_PORT: "${AUTH_PORT}"
    container_name: cont-service-auth
    ports:
      - "${AUTH_PORT}:${AUTH_PORT}"
    env_file:
      - .env
    depends_on:
      - postgres-auth
    volumes:
      - ../auth-service:/app
    restart: always
    networks:
      - my-network

  service-qa:
    build:
      context: ../qa-service
      args:
          QA_PORT: "${QA_PORT}"  # Pasar el puerto como ARG
    env_file:
      - .env
    ports:
      - "${QA_PORT}:${QA_PORT}"
    container_name: cont-service-qa
    depends_on:
      - postgres-qa
    volumes:
      - ../qa-service:/app
    restart: always
    networks:
      - my-network

  service-competition:
    build:
      context: ../competition-service
      args:
          COMPETITION_PORT: "${COMPETITION_PORT}"
    ports:
      - "${COMPETITION_PORT}:${COMPETITION_PORT}"
    container_name: cont-service-competition
    env_file:
      - .env
    depends_on:
      - postgres-competition
    volumes:
      - ../competition-service:/app
    restart: always
    networks:
      - my-network

  # ðŸ”¹ Herramientas
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-cuestionarios
    restart: always
    ports:
      - "${PGADMIN_PORT}:80"  # Acceder en http://localhost:5050
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres-auth
      - postgres-qa
      - postgres-competition
    networks:
      - my-network

  # ðŸ”¹ Bases de datos
  postgres-auth:
    image: postgres:15
    container_name: postgres-auth
    ports:
      - "${AUTH_POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network

  postgres-qa:
    image: postgres:15
    container_name: postgres-qa
    ports:
      - "${QA_POSTGRES_PORT}:5432"
    env_file:
      - .env
    volumes:
      - postgres_qa_data:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network

  postgres-competition:
    image: postgres:15
    container_name: postgres-competition
    ports:
      - "${COMPETITION_POSTGRES_PORT}:5432"  # Puerto cambiado para evitar conflictos
    env_file:
      - .env
    volumes:
      - postgres_competition_data:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network

# ðŸ”¹ DefiniciÃ³n de volÃºmenes
volumes:
  postgres_qa_data:
    external: false
  postgres_competition_data:
    external: false
  postgres_auth_data:
    external: false

# ðŸ”¹ DefiniciÃ³n de redes
networks:
  my-network:
    driver: bridge
